// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDaF.Data.EntityFramework.Context;

#nullable disable

namespace RDaF.Data.Migrations
{
    [DbContext(typeof(RDaFDbContext))]
    partial class RDaFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RDaF.Shared.Entities.JunctionAggregate.OverarchSubtopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OverarchId")
                        .HasColumnType("int");

                    b.Property<int>("SubtopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OverarchId");

                    b.HasIndex("SubtopicId");

                    b.ToTable("OverarchSubtopics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.JunctionAggregate.RoleSubtopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SubtopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubtopicId");

                    b.ToTable("RoleSubtopics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.LCStageAggregate.LCStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("HasTopics")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LifeCycleStage")
                        .HasColumnType("longtext");

                    b.Property<string>("LifeCycleStageDefinition")
                        .HasColumnType("longtext");

                    b.Property<string>("LinkName")
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("LCStages");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.OverarchAggregate.Overarch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OTNarrative")
                        .HasColumnType("longtext");

                    b.Property<string>("OverarchingTheme")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Overarches");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.ReferenceAggregate.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ACSCitation")
                        .HasColumnType("longtext");

                    b.Property<string>("APACitation")
                        .HasColumnType("longtext");

                    b.Property<string>("Authors")
                        .HasColumnType("longtext");

                    b.Property<string>("ChicagoCitation")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("ConferenceName")
                        .HasColumnType("longtext");

                    b.Property<string>("DOI")
                        .HasColumnType("longtext");

                    b.Property<string>("Date")
                        .HasColumnType("longtext");

                    b.Property<string>("DbKey")
                        .HasColumnType("longtext");

                    b.Property<string>("Edition")
                        .HasColumnType("longtext");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext");

                    b.Property<string>("HarvardCitation")
                        .HasColumnType("longtext");

                    b.Property<string>("ISBN")
                        .HasColumnType("longtext");

                    b.Property<string>("ISSN")
                        .HasColumnType("longtext");

                    b.Property<string>("Issue")
                        .HasColumnType("longtext");

                    b.Property<string>("JournalAbbr")
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .HasColumnType("longtext");

                    b.Property<string>("Pages")
                        .HasColumnType("longtext");

                    b.Property<string>("Place")
                        .HasColumnType("longtext");

                    b.Property<string>("PublType")
                        .HasColumnType("longtext");

                    b.Property<string>("PublYear")
                        .HasColumnType("longtext");

                    b.Property<string>("PublicationTypes")
                        .HasColumnType("longtext");

                    b.Property<string>("Publisher")
                        .HasColumnType("longtext");

                    b.Property<string>("SourceTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Squib")
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.Property<string>("Volume")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("References");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.RoleAggregate.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.TopicAggregate.Subtopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SubtopicDefinition")
                        .HasColumnType("longtext");

                    b.Property<string>("SubtopicName")
                        .HasColumnType("longtext");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Subtopics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.TopicAggregate.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Definition")
                        .HasColumnType("longtext");

                    b.Property<int>("LCStageId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TopicName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LCStageId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.JunctionAggregate.OverarchSubtopic", b =>
                {
                    b.HasOne("RDaF.Shared.Entities.OverarchAggregate.Overarch", "Overarch")
                        .WithMany("OverarchSubtopics")
                        .HasForeignKey("OverarchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RDaF.Shared.Entities.TopicAggregate.Subtopic", "Subtopic")
                        .WithMany("OverarchSubtopics")
                        .HasForeignKey("SubtopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Overarch");

                    b.Navigation("Subtopic");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.JunctionAggregate.RoleSubtopic", b =>
                {
                    b.HasOne("RDaF.Shared.Entities.RoleAggregate.Role", "Role")
                        .WithMany("RoleSubtopics")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RDaF.Shared.Entities.TopicAggregate.Subtopic", "Subtopic")
                        .WithMany("RoleSubtopics")
                        .HasForeignKey("SubtopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Subtopic");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.TopicAggregate.Subtopic", b =>
                {
                    b.HasOne("RDaF.Shared.Entities.TopicAggregate.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.TopicAggregate.Topic", b =>
                {
                    b.HasOne("RDaF.Shared.Entities.LCStageAggregate.LCStage", "LCStage")
                        .WithMany()
                        .HasForeignKey("LCStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LCStage");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.OverarchAggregate.Overarch", b =>
                {
                    b.Navigation("OverarchSubtopics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.RoleAggregate.Role", b =>
                {
                    b.Navigation("RoleSubtopics");
                });

            modelBuilder.Entity("RDaF.Shared.Entities.TopicAggregate.Subtopic", b =>
                {
                    b.Navigation("OverarchSubtopics");

                    b.Navigation("RoleSubtopics");
                });
#pragma warning restore 612, 618
        }
    }
}
